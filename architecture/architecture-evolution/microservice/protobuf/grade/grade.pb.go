// Code generated by protoc-gen-go. DO NOT EDIT.
// source: microservice/protobuf/grade/grade.proto

package grade

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GradeRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GradeRequest) Reset()         { *m = GradeRequest{} }
func (m *GradeRequest) String() string { return proto.CompactTextString(m) }
func (*GradeRequest) ProtoMessage()    {}
func (*GradeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_56f506f3a60231a9, []int{0}
}

func (m *GradeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GradeRequest.Unmarshal(m, b)
}
func (m *GradeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GradeRequest.Marshal(b, m, deterministic)
}
func (m *GradeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GradeRequest.Merge(m, src)
}
func (m *GradeRequest) XXX_Size() int {
	return xxx_messageInfo_GradeRequest.Size(m)
}
func (m *GradeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GradeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GradeRequest proto.InternalMessageInfo

func (m *GradeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GradeResponse struct {
	Grade                string   `protobuf:"bytes,1,opt,name=grade,proto3" json:"grade,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GradeResponse) Reset()         { *m = GradeResponse{} }
func (m *GradeResponse) String() string { return proto.CompactTextString(m) }
func (*GradeResponse) ProtoMessage()    {}
func (*GradeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_56f506f3a60231a9, []int{1}
}

func (m *GradeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GradeResponse.Unmarshal(m, b)
}
func (m *GradeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GradeResponse.Marshal(b, m, deterministic)
}
func (m *GradeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GradeResponse.Merge(m, src)
}
func (m *GradeResponse) XXX_Size() int {
	return xxx_messageInfo_GradeResponse.Size(m)
}
func (m *GradeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GradeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GradeResponse proto.InternalMessageInfo

func (m *GradeResponse) GetGrade() string {
	if m != nil {
		return m.Grade
	}
	return ""
}

func init() {
	proto.RegisterType((*GradeRequest)(nil), "GradeRequest")
	proto.RegisterType((*GradeResponse)(nil), "GradeResponse")
}

func init() {
	proto.RegisterFile("microservice/protobuf/grade/grade.proto", fileDescriptor_56f506f3a60231a9)
}

var fileDescriptor_56f506f3a60231a9 = []byte{
	// 142 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0xcf, 0xcd, 0x4c, 0x2e,
	0xca, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0x4f, 0x2a,
	0x4d, 0xd3, 0x4f, 0x2f, 0x4a, 0x4c, 0x49, 0x85, 0x90, 0x7a, 0x60, 0x41, 0x25, 0x39, 0x2e, 0x1e,
	0x77, 0x10, 0x37, 0x28, 0xb5, 0xb0, 0x34, 0xb5, 0xb8, 0x44, 0x88, 0x8f, 0x8b, 0x29, 0x33, 0x45,
	0x82, 0x51, 0x81, 0x51, 0x83, 0x33, 0x88, 0x29, 0x33, 0x45, 0x49, 0x95, 0x8b, 0x17, 0x2a, 0x5f,
	0x5c, 0x90, 0x9f, 0x57, 0x9c, 0x2a, 0x24, 0xc2, 0xc5, 0x0a, 0xd6, 0x0f, 0x55, 0x03, 0xe1, 0x18,
	0x99, 0x71, 0xb1, 0x82, 0x95, 0x09, 0xe9, 0x72, 0x71, 0x05, 0x96, 0xa6, 0x16, 0x55, 0x42, 0x78,
	0xbc, 0x7a, 0xc8, 0x86, 0x4b, 0xf1, 0xe9, 0xa1, 0x98, 0xa5, 0xc4, 0x90, 0xc4, 0x06, 0x76, 0x85,
	0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xaf, 0xf4, 0x0b, 0xdf, 0xb0, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GradeClient is the client API for Grade service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GradeClient interface {
	QueryGrade(ctx context.Context, in *GradeRequest, opts ...grpc.CallOption) (*GradeResponse, error)
}

type gradeClient struct {
	cc *grpc.ClientConn
}

func NewGradeClient(cc *grpc.ClientConn) GradeClient {
	return &gradeClient{cc}
}

func (c *gradeClient) QueryGrade(ctx context.Context, in *GradeRequest, opts ...grpc.CallOption) (*GradeResponse, error) {
	out := new(GradeResponse)
	err := c.cc.Invoke(ctx, "/Grade/QueryGrade", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GradeServer is the server API for Grade service.
type GradeServer interface {
	QueryGrade(context.Context, *GradeRequest) (*GradeResponse, error)
}

func RegisterGradeServer(s *grpc.Server, srv GradeServer) {
	s.RegisterService(&_Grade_serviceDesc, srv)
}

func _Grade_QueryGrade_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GradeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GradeServer).QueryGrade(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Grade/QueryGrade",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GradeServer).QueryGrade(ctx, req.(*GradeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Grade_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Grade",
	HandlerType: (*GradeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "QueryGrade",
			Handler:    _Grade_QueryGrade_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "microservice/protobuf/grade/grade.proto",
}
